id: asvs_13_2_1

info:
  name: ASVS 13.2.1 Check
  author: Hamed Salimian
  severity: high
  classification:
    cwe-id: CWE-650
  reference:
    - https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/06-Test_HTTP_Methods
    - https://nmap.org/nsedoc/scripts/http-methods.html
  tags: asvs,13.2.1
  description: |
    Verify that enabled RESTful HTTP methods are a valid choice for the user or action, such as preventing normal users using DELETE or PUT on protected API or resources.

http:
  - method: OPTIONS
    path:
      - "{{BaseURL}}"
    headers:
      Host: "{{Hostname}}"
      Cookie: "{{Cookie}}"
    extractors:
      - type: regex
        name: "potentially risky methods (OPTIONS check)"
        part: header
        regex:
          - "(PUT|DELETE|TRACE|PATCH|CONNECT)"
      - type: kval
        name: "Access-Control-Allow-Methods"
        part: header
        kval:
          - Access_Control_Allow_Methods
    matchers:
      - type: regex
        part: header
        regex:
          - "(PUT|DELETE|TRACE|PATCH|CONNECT)"

  - raw:
      - |
        {{to_upper(rand_text_alpha(4))}} {{Path}} HTTP/1.1
        Host: {{Hostname}}
        Cookie: {{Cookie}}
    extractors:
      - type: dsl
        internal: true
        name: rand_resp
        dsl:
          - status_code

  - method: PUT
    path:
      - "{{BaseURL}}"
    headers:
      Host: "{{Hostname}}"
      Cookie: "{{Cookie}}"
    body: "<html>HTTP PUT Method is Enabled</html>"
    extractors:
      - type: dsl
        name: "PUT method is Enabled"
        dsl:
          - status_code
    matchers-condition: and
    matchers:
      - type: status
        negative: true
        status:
          - 405
          - 501
      - type: dsl
        dsl:
          - "(status_code < 210 && status_code >= 200) && (rand_resp != status_code)"

  - method: DELETE
    path:
      - "{{BaseURL}}"
    headers:
      Host: "{{Hostname}}"
      Cookie: "{{Cookie}}"
    extractors:
      - type: dsl
        name: "DELETE method is Enabled"
        dsl:
          - status_code
    matchers-condition: and
    matchers:
      - type: status
        negative: true
        status:
          - 405
          - 501
      - type: dsl
        negative: true
        dsl:
          - "(status_code < 600 && status_code >= 400) || (rand_resp == status_code)"
  
  - method: TRACE
    path:
      - "{{BaseURL}}"
    headers:
      Host: "{{Hostname}}"
      Cookie: "{{Cookie}}"
    extractors:
      - type: dsl
        name: "TRACE method is Enabled"
        dsl:
          - status_code
    matchers-condition: and
    matchers:
      - type: status
        negative: true
        status:
          - 405
          - 501
      - type: dsl
        negative: true
        dsl:
          - "(status_code < 600 && status_code >= 400) || (rand_resp == status_code)"
      - type: regex
        part: body
        regex:
          - '^TRACE \S+ HTTP\/[0-9]\.[0-9]'

  - method: PATCH
    path:
      - "{{BaseURL}}"
    headers:
      Host: "{{Hostname}}"
      Cookie: "{{Cookie}}"
    body: "<patch request data>"
    extractors:
      - type: dsl
        name: "PATCH method is Enabled"
        dsl:
          - status_code
    matchers-condition: and
    matchers:
      - type: status
        negative: true
        status:
          - 405
          - 501
      - type: dsl
        negative: true
        dsl:
          - "(status_code < 600 && status_code >= 400) || (rand_resp == status_code)"

  - method: CONNECT
    path:
      - "{{BaseURL}}"
    headers:
      Host: "{{Hostname}}"
      Cookie: "{{Cookie}}"
    extractors:
      - type: dsl
        name: "CONNECT method is Enabled"
        dsl:
          - status_code
    matchers-condition: and
    matchers:
      - type: status
        negative: true
        status:
          - 405
          - 501
      - type: dsl
        negative: true
        dsl:
          - "(status_code < 600 && status_code >= 400) || (rand_resp == status_code)"
